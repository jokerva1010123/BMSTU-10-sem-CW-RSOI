version: "3"
volumes:
  db-data:
  
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

services:
  postgres:
    image: library/postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  users-service:
    build:
      context: src/users
      dockerfile: Dockerfile
    image: drstarland/testus-users:1.0
    container_name: testus-users
    environment:
      PORT: "8040"
    ports:
      - "8040:8040"
    restart: always

  notes-service:
    build:
      context: src/notes
      dockerfile: Dockerfile
    image: drstarland/testus-notes:1.0
    container_name: testus-notes
    environment:
      PORT: "8050"
    ports:
      - "8050:8050"
    depends_on:
      - users-service
    restart: always

  tasks-service:
    build:
      context: src/tasks
      dockerfile: Dockerfile
    image: drstarland/testus-tasks:1.0
    container_name: testus-tasks
    environment:
      PORT: "8060"
    ports:
      - "8060:8060"
    restart: always

  costs-service:
    build:
      context: src/costs
      dockerfile: Dockerfile
    image: drstarland/testus-costs:1.0
    container_name: testus-costs
    environment:
      PORT: "8070"
    ports:
      - "8070:8070"
    restart: always
    # depends_on:
    #   - users-service

  frontend-service:
    build:
      context: src/frontend
      dockerfile: Dockerfile
    image: drstarland/testus-frontend:1.0
    container_name: testus-frontend
    environment:
      PORT: "3000"
    ports:
      - "86:3000"
    depends_on:
      - gateway-service
    restart: always

  statistics-service:
    build:
      context: src/statistics
      dockerfile: Dockerfile
    image: drstarland/testus-statistics:1.0
    container_name: testus-statistics
    environment:
      PORT: "8030"
    ports:
      - "8030:8030"
    depends_on:
      - kafka-service
      - postgres
    links: 
      - postgres
    restart: always

  zookeeper-service:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - '31000:31000'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000
    restart: always

  kafka-service:
    image: confluentinc/cp-kafka:7.3.2
    container_name: testus-kafka
    ports:
      - '9092:9092'
      - '31001:31001'
    depends_on:
      - zookeeper-service
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://testus-kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'false'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31001
    restart: always

  gateway-service:
    build:
      context: src/gateway
      dockerfile: Dockerfile
    image: drstarland/testus-gateway:1.0
    container_name: testus-gateway
    environment:
      PORT: "8080"
    ports:
      - "8080:8080"
    depends_on:
      - costs-service
      - notes-service
      - tasks-service
      - users-service
      - kafka-service
    restart: always

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "22181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka-1
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   depends_on:
  #     - zookeeper

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #     KAFKA_JMX_HOSTNAME: "localhost"
  #     KAFKA_JMX_PORT: 31001
  #   ports:
  #     - "22181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka-1
  #   ports:
  #     - "9092:9092"
  #     - "31001:31001"
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #     # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
  #     # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
  #     # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
  #     # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  #     # CONFLUENT_METRICS_ENABLE: 'false'
  #     # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  #     KAFKA_JMX_HOSTNAME: "localhost"
  #     KAFKA_JMX_PORT: 31001
  #   depends_on:
  #     - zookeeper